{"version":3,"sources":["components/Input/index.js","components/Filter/index.js","components/PokemonCard/index.js","components/PokemonList/index.js","components/Loader/index.js","components/Main/index.js","components/App/index.js","services/PokemonService.js","index.js"],"names":["Input","_this$props","this","props","labelContent","inputType","inputName","inputValue","example","handleInputChange","react_default","a","createElement","className","htmlFor","type","name","id","placeholder","value","onChange","Component","Filter","pokemonName","saveUserQuery","components_Input","PokemonCard","pokemon","sprites","types","src","front_default","alt","map","item","ind","key","PokemonList","pokemonData","components_PokemonCard","Loader","Main","components_Filter","length","components_PokemonList","components_Loader","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","filters","getDataFromLocalStorage","bind","assertThisInitialized","_this2","fetch","then","response","json","data","promises","results","url","Promise","all","responses","forEach","setState","prevState","newState","concat","saveDataAtLocalStorage","localStorage","setItem","JSON","stringify","savedData","getItem","parse","fetchAndSaveData","e","_e$currentTarget","currentTarget","objectSpread","defineProperty","_this$state","filter","includes","toLowerCase","filteredPokemons","filterPokemonsByName","components_Main","ReactDOM","render","components_App","document","getElementById"],"mappings":"mRAuCeA,0LAnCJ,IAAAC,EAQHC,KAAKC,MANPC,EAFKH,EAELG,aACAC,EAHKJ,EAGLI,UACAC,EAJKL,EAILK,UACAC,EALKN,EAKLM,WACAC,EANKP,EAMLO,QACAC,EAPKR,EAOLQ,kBAEF,OACEC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeC,QAASR,GACtCF,EACDM,EAAAC,EAAAC,cAAA,SACEC,UAAU,eACVE,KAAMV,EACNW,KAAMV,EACNW,GAAIX,EACJY,YAAaV,EACbW,MAAOZ,EACPa,SAAUX,YApBAY,cCwBLC,mLAtBJ,IAAArB,EACgCC,KAAKC,MAApCoB,EADDtB,EACCsB,YAAaC,EADdvB,EACcuB,cACrB,OACEd,EAAAC,EAAAC,cAAA,WAASC,UAAU,eACjBH,EAAAC,EAAAC,cAACa,EAAD,CACErB,aAAa,0BACbC,UAAU,OACVC,UAAU,cACVC,WAAYgB,EACZf,QAAQ,cACRC,kBAAmBe,YAXRH,aCwBNK,mLAxBJ,IACCC,EAAYzB,KAAKC,MAAjBwB,QACAC,EAA6BD,EAA7BC,QAASX,EAAoBU,EAApBV,GAAID,EAAgBW,EAAhBX,KAAMa,EAAUF,EAAVE,MAC3B,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKkB,IAAKF,EAAQG,cAAeC,IAAKhB,IACtCN,EAAAC,EAAAC,cAAA,WAAMK,GACNP,EAAAC,EAAAC,cAAA,WAAMI,GACNN,EAAAC,EAAAC,cAAA,UACGiB,EAAMI,IAAI,SAACC,EAAMC,GAChB,OACEzB,EAAAC,EAAAC,cAAA,MAAIwB,IAAKD,GAAMD,EAAKnB,KAAKC,iBAZbK,aCwBXgB,mLAtBJ,IACCC,EAAgBpC,KAAKC,MAArBmC,YACR,OACE5B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACXyB,EAAYL,IAAI,SAAAN,GACf,OACEjB,EAAAC,EAAAC,cAAA,MAAIwB,IAAKT,EAAQV,GAAIJ,UAAU,iBAC7BH,EAAAC,EAAAC,cAAC2B,EAAD,CAAaZ,QAASA,eARVN,aCAXmB,EAFA,kBAAM9B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAhB,eC2BN4B,mLAtBJ,IAAAxC,EAC6CC,KAAKC,MAAjDoB,EADDtB,EACCsB,YAAae,EADdrC,EACcqC,YAAad,EAD3BvB,EAC2BuB,cAClC,OACEd,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACdH,EAAAC,EAAAC,cAAC8B,EAAD,CAAQnB,YAAaA,EAAaC,cAAeA,IAE7Cc,GAAiBA,EAAYK,OAC/BjC,EAAAC,EAAAC,cAACgC,EAAD,CAAaN,YAAaA,IAE1B5B,EAAAC,EAAAC,cAACiC,EAAD,cAVSxB,aCyFJyB,cAzFb,SAAAA,EAAY3C,GAAO,IAAA4C,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9C,KAAA4C,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAA9C,KAAA8C,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAlD,KAAMC,KACDkD,MAAQ,CACXC,QAAS,CACP/B,YAAa,IAEfe,YAAaS,EAAKQ,2BAGpBR,EAAKvB,cAAgBuB,EAAKvB,cAAcgC,KAAnBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KATJA,kFAYA,IAAAW,EAAAxD,KChBOyD,MAFX,8CAE2BC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SDkB/DF,KAAK,SAAAG,GACJ,IAEMC,EAFUD,EAAKE,QAEIhC,IAAI,SAAAC,GAE3B,OADgByB,MAAMzB,EAAKgC,KAAKN,KAAK,SAAAC,GAAQ,OAAIA,EAASC,WAI5DK,QAAQC,IAAIJ,GACTJ,KAAK,SAAAS,GACJA,EAAUC,QAAQ,SAAAT,GAChBH,EAAKa,SAAS,SAAAC,GACZ,IAAMC,EAAW,CACfnC,YAAakC,EAAUlC,YAAYoC,OAAOb,IAG5C,OADAH,EAAKiB,uBAAuBF,EAASnC,aAC9BmC,yDAOEV,GACrBa,aAAaC,QAAQ,YAAaC,KAAKC,UAAUhB,sDAIjD,IAAMiB,EAAYJ,aAAaK,QAAQ,aACvC,OAAKD,EAIIF,KAAKI,MAAMF,IAHlB9E,KAAKiF,mBACE,0CAMGC,GAAG,IAAAC,EACSD,EAAEE,cAAlBtE,EADOqE,EACPrE,KAAMG,EADCkE,EACDlE,MACdjB,KAAKqE,SAAS,SAAAC,GAOZ,MANiB,CACflB,QAAQN,OAAAuC,EAAA,EAAAvC,CAAA,GACHwB,EAAUlB,QADRN,OAAAwC,EAAA,EAAAxC,CAAA,GAEJhC,EAAOG,sDAOO,IAAAsE,EACYvF,KAAKmD,MAA9Bf,EADamD,EACbnD,YACAf,EAFakE,EACAnC,QACb/B,YAIR,OAHyBe,EAAYoD,OAAO,SAAA/D,GAC1C,OAAQJ,GAAeI,EAAQX,KAAK2E,SAASpE,EAAYqE,kDAKpD,IAECrE,EADYrB,KAAKmD,MAAjBC,QACA/B,YACFsE,EAAmB3F,KAAK4F,uBAC9B,OACEpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACmF,EAAD,CACExE,YAAaA,EACbe,YAAauD,EACbrE,cAAetB,KAAKsB,wBAnFZH,aEAlB2E,IAASC,OAAOvF,EAAAC,EAAAC,cAACsF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.6c69b50d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Input extends Component {\n  render() {\n    const {\n      labelContent,\n      inputType,\n      inputName,\n      inputValue,\n      example,\n      handleInputChange\n    } = this.props;\n    return (\n      <label className=\"input__label\" htmlFor={inputName}>\n        {labelContent}\n        <input\n          className=\"input__field\"\n          type={inputType}\n          name={inputName}\n          id={inputName}\n          placeholder={example}\n          value={inputValue}\n          onChange={handleInputChange}\n        />\n      </label>\n    );\n  }\n}\n\nInput.propTypes = {\n  labelContent: PropTypes.string.isRequired,\n  inputType: PropTypes.string.isRequired,\n  inputName: PropTypes.string.isRequired,\n  inputValue: PropTypes.string.isRequired,\n  example: PropTypes.string.isRequired,\n  handleInputChange: PropTypes.func.isRequired\n}\n\nexport default Input;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from '../Input';\n\nclass Filter extends Component {\n  render() {\n    const { pokemonName, saveUserQuery } = this.props;\n    return (\n      <section className=\"app__filter\">\n        <Input\n          labelContent=\"Filter pokemons by name\"\n          inputType=\"text\"\n          inputName=\"pokemonName\"\n          inputValue={pokemonName}\n          example=\"Ex: Pikachu\"\n          handleInputChange={saveUserQuery}\n        />\n      </section>\n    );\n  }\n}\n\nFilter.propTypes = {\n  pokemonName: PropTypes.string.isRequired,\n  saveUserQuery: PropTypes.func.isRequired\n}\n\nexport default Filter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass PokemonCard extends Component {\n  render() {\n    const { pokemon } = this.props;\n    const { sprites, id, name, types } = pokemon;\n    return (\n      <div className=\"pokemon__card\">\n        <img src={sprites.front_default} alt={name}></img>\n        <div>{id}</div>\n        <div>{name}</div>\n        <ul>\n          {types.map((item, ind) => {\n            return (\n              <li key={ind}>{item.type.name}</li>\n            )\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nPokemonCard.propTypes = {\n  pokemon: PropTypes.object.isRequired\n}\n\nexport default PokemonCard;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PokemonCard from '../PokemonCard';\n\nclass PokemonList extends Component {\n  render() {\n    const { pokemonData } = this.props;\n    return (\n      <ul className=\"pokemon__list\">\n        {pokemonData.map(pokemon => {\n          return (\n            <li key={pokemon.id} className=\"pokemon__item\">\n              <PokemonCard pokemon={pokemon} />\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nPokemonList.propTypes = {\n  pokemonData: PropTypes.arrayOf(\n    PropTypes.object.isRequired\n  ).isRequired\n}\n\nexport default PokemonList;","import React from 'react';\n\nconst Loader = () => <span className=\"loader\">Loading...</span>;\n\nexport default Loader;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Filter from '../Filter';\nimport PokemonList from '../PokemonList';\nimport Loader from '../Loader';\n\nclass Main extends Component {\n  render() {\n    const { pokemonName, pokemonData, saveUserQuery } = this.props;\n    return (\n      <main className=\"app__main\">\n        <Filter pokemonName={pokemonName} saveUserQuery={saveUserQuery} />\n\n        {(!!pokemonData && !!pokemonData.length) ? (\n          <PokemonList pokemonData={pokemonData} />\n        ) : (\n          <Loader />\n        )}\n      </main>\n    );\n  }\n}\n\nMain.propTypes = {\n  pokemonName: PropTypes.string.isRequired,\n  pokemonData: PropTypes.array.isRequired,\n  saveUserQuery: PropTypes.func.isRequired\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport './App.scss';\nimport { fetchPokemons } from '../../services/PokemonService';\nimport Main from '../Main';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filters: {\n        pokemonName: \"\"\n      },\n      pokemonData: this.getDataFromLocalStorage()\n    }\n\n    this.saveUserQuery = this.saveUserQuery.bind(this);\n  }\n\n  fetchAndSaveData() {\n    fetchPokemons()\n      .then(data => {\n        const results = data.results;\n\n        const promises = results.map(item => {\n          const promise = fetch(item.url).then(response => response.json());\n          return promise;\n        });\n\n        Promise.all(promises)\n          .then(responses => {\n            responses.forEach(response => {\n              this.setState(prevState => {\n                const newState = {\n                  pokemonData: prevState.pokemonData.concat(response)\n                };\n                this.saveDataAtLocalStorage(newState.pokemonData);\n                return newState;\n              })\n            })\n          })\n      })\n  }\n\n  saveDataAtLocalStorage(data) {\n    localStorage.setItem(\"savedData\", JSON.stringify(data));\n  }\n\n  getDataFromLocalStorage() {\n    const savedData = localStorage.getItem(\"savedData\");\n    if (!savedData) {\n      this.fetchAndSaveData();\n      return [];\n    } else {\n      return JSON.parse(savedData);\n    }\n  }\n\n  saveUserQuery(e) {\n    const { name, value } = e.currentTarget;\n    this.setState(prevState => {\n      const newState = {\n        filters: {\n          ...prevState.filters,\n          [name]: value\n        }\n      };\n      return newState;\n    })\n  }\n\n  filterPokemonsByName() {\n    const { pokemonData, filters } = this.state;\n    const { pokemonName } = filters;\n    const filteredPokemons = pokemonData.filter(pokemon => {\n      return !pokemonName || pokemon.name.includes(pokemonName.toLowerCase());\n    });\n    return filteredPokemons;\n  }\n\n  render() {\n    const { filters } = this.state;\n    const { pokemonName } = filters;\n    const filteredPokemons = this.filterPokemonsByName();\n    return (\n      <div className=\"App\">\n        <Main\n          pokemonName={pokemonName}\n          pokemonData={filteredPokemons}\n          saveUserQuery={this.saveUserQuery}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const ENDPOINT = 'https://pokeapi.co/api/v2/pokemon?limit=25';\n\nconst fetchPokemons = () => fetch(ENDPOINT).then(response => response.json());\n\nexport { fetchPokemons };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}